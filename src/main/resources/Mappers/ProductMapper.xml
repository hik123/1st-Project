<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.exproject.product.ProductMapper">
    <!-- 장바구니 목록 추가 -->
    <insert id="insProduct" useGeneratedKeys="true" keyProperty="productPk">
        INSERT INTO t_purchase_product
        SET user_pk = #{userPk}
        , category_pk = #{categoryPk}
        , product_nm = #{productNm}
        <if test=" memo != '' and memo != null ">
            , memo = #{memo}
        </if>
    </insert>

    <!-- 장바구니 목록 보기 -->
    <select id="selProduct">
        SELECT
              A.product_pk AS productPk
            , A.user_pk AS userPk
            , B.category_pk AS categoryPk
            , B.category_nm AS categoryNm
            , A.product_nm AS productNm
            , A.memo
            , A.created_at AS createdAt
            , A.updated_at AS updatedAt
            , A.buying_check AS buyingCheck
            , DATE(A.buying_date) AS buyingDate
        FROM t_purchase_product A
        JOIN t_category B
        ON A.category_pk = B.category_pk
        WHERE A.user_pk = #{userPk}
        <choose>
            <when test="choiceList == 0">
                AND A.buying_check <![CDATA[<]]> 2
            </when>
            <when test="choiceList == 1">
                AND A.buying_check = 0 <!-- 구매 할 목록 -->
            </when>
            <when test="choiceList == 2">
                AND A.buying_check = 1 <!-- 구매 확정 목록-->
            </when>
        </choose>
        <!-- 날짜 별로 보기
        <if test=" createdAt != '' and createdAt != '0000-00-00' " >
            AND DATE(created_at) = #{createdAt}
        </if>
        <if test=" buyingDate != '' and buyingDate != '0000-00-00' " >
            AND DATE(buying_date) = #{buyingDate}
        </if>
        -->
    </select>

    <!-- 장바구니 목록 수정-->
    <update id="updProduct">
        UPDATE t_purchase_product
        SET
        <if test="categoryPk != '' and categoryPk != null">
            category_pk = #{categoryPk}
        </if>
        <if test="productNm != '' and productNm != null">
            , product_nm = #{productNm}
        </if>
        <choose>
            <when test="memo != '' and memo != null">
                , memo = #{memo}
            </when>
            <otherwise>
                , memo = null    <!-- 이전에 입력된 memo가 있을경우 null-->
            </otherwise>
        </choose>
        WHERE product_pk = #{productPk}
        AND user_pk = #{userPk}
        AND buying_check = 0
    </update>

    <!-- 구매 확정 처리-->
    <update id="updProductCheck">
        UPDATE t_purchase_product
        SET buying_check = 1
        , buying_date = NOW()
        WHERE product_pk = #{productPk}
        AND user_pk = #{userPk}
        AND buying_check = 0
    </update>

    <!-- 구매 확정 취소 -->
    <update id="updProductCheckCancel">
        UPDATE t_purchase_product
        SET buying_check = 0
        , buying_date = null
        WHERE product_pk = #{productPk}
        AND user_pk = #{userPk}
        AND buying_check = 1
    </update>

    <!-- 구매 확정 처리 된 상품 숨김 -->
    <update id="updProductCptHide">
        UPDATE t_purchase_product
        SET buying_check = 2
        WHERE product_pk = #{productPk}
        AND user_pk = #{userPk}
        AND buying_check = 1
    </update>

    <!-- 장바구니 목록 삭제 -->
    <delete id="deleteProduct">
        DELETE FROM t_purchase_product
        WHERE product_pk = #{productPk}
        AND user_pk = #{userPk}
        AND buying_check = 0
    </delete>

    <!-- -->
    <!-- 상품 삭제 시 예외처리를 위한 특정 상품Pk 유무 확인-->
    <select id="selPkProduct">
        SELECT product_nm AS productNm
        FROM t_purchase_product
        WHERE product_pk = #{productPk}
        AND (buying_check = 0 OR buying_check = 1)
    </select>
</mapper>